# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  CONFIG_KEY: config_value

---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
data:
  SECRET_KEY: c2VjcmV0X3NlY3JldF9wYXNzd29yZA==

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: welcomeapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: welcomeapp
  template:
    metadata:
      labels:
        app: welcomeapp
    spec:
      containers:
        - name: my-container
          image: ghcr.io/fzfr/devops-test:latest
          ports:
            - containerPort: 5000
          env:
            - name: CONFIG_KEY
              valueFrom:
                configMapKeyRef:
                  name: my-configmap
                  key: CONFIG_KEY
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: SECRET_KEY

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: welcome-app
spec:
  selector:
    app: welcomeapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000     
  type: LoadBalancer 

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: welcome-app
                port:
                  number: 80

---
# Ingress with letsencrypt
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress-tls
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - fazza.cybernethicc.com
      secretName: my-tls-secret
  rules:
    - host: fazza.cybernethicc.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: welcome-app
                port:
                  number: 80
